#!/usr/bin/env python

import rospy
from geometry_msgs.msg import Twist
import sys, select, tty, termios
import time
#tty and termious are linux operations


""""
#initialize velocities and step size [linear, angular]
burger_vel_max = [.22,2.84]
waffle_lin_max = [.26, 1.78]
"""
twist = Twist() #twist variable for publhing to cmd_vel topic
#twist.linear.x will be our linear velocity outut
#twist.angular.z will be our angular velocity output
twist.linear.x = 0.0; twist.linear.y = 0.0; twist.linear.z = 0.0
twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = 0.0

linInc = .01 #linear velocity step size
angInc=.1 #angular velocity step size


#assign correct velocity max based on model
# rospy.get_param('foo', 'default_value')    <- syntax
myModel = rospy.get_param('model', 'waffle')
if myModel == 'burger':
    linMax = .22
    angMax = 2.84
elif myModel == 'waffle':
    linMax = .26
    angMax = 1.78
else:
    sys.exit('There was an invalid model input')

#messages to user
msg = """

              W           Forward
           A  S  D   Left, Backwards, Right
              X            Stop

              Try not to crash!!!
              """
exit = """

        Ending controll transmition
        """
def getKey():
    tty.setraw(sys.stdin.fileno())
    rlist, _, _ =select.select([sys.stdin], [], [], .01)
    if rlist:
        newKey = sys.stdin.read(1)
    else:
        key = ''
    termios.tcsetattr(sys.stdin, termios.TCSADRAIN, settings)
    return newKey #for testing newVelocity


#make sure velocity steps are smooth and in bounds

def newVelocity (key):
    newTwist = Twist() #new twist variable for  assigning new velocity vector
    newTwist.linear.x = twist.linear.x; newTwist.linear.y = 0; newTwist.linear.z = 0;
    newTwist.angular.x = 0; newTwist.angular.y = 0; newTwist.angular.z=0;
    if (key=='w' and twist.linear.x < linMax):
        newTwist.linear.x = twist.linear.x + linInc #increase forwad speed
    if (key=='s' and twist.linear.x > -linMax):
        newTwist.linear.x = newTwist.linear.x - linInc
    if (key=='a' and twist.angular.z < angMax):
        newTwist.angular.z = newTwist.angular.z + angInc
    if (key=='d' and twist.angular > -angMax):
        newTwist.angular.z = newTwist.angular.z - angInc
    if (key=='x'): # x -> STOP
        twist.linear.x = 0.0
        twist.angular.z = 0.0
    #keys to instantly set velocity as desired [all fullspeed]
    if (key == '9'):
        pass
    if (key == '8'):
        newTwist.linear.x = linMax; newTwist.linear.y = 0; newTwist.linear.z = 0;
        newTwist.angular.x = 0; newTwist.angular.y = 0; newTwist.angular.z=0;
    if (key == '7'):
        newTwist.linear.x = 0; newTwist.linear.y = 0; newTwist.linear.z = 0;
        newTwist.angular.x = 0; newTwist.angular.y = 0; newTwist.angular.z=angMax;
    if (key == '6'):
        pass
    if (key == '4'):
        pass
    if (key == '3'):
        pass
    if (key == '2'):
        newTwist.linear.x = -linMax; newTwist.linear.y = 0; newTwist.linear.z = 0;
        newTwist.angular.x = 0; newTwist.angular.y = 0; newTwist.angular.z=0;
    if (key == '1'):
        pass

    return newTwist


if __name__ == "__main__":
    #twist = Twist() #initialize twist variable for velocities
    rospy.init_node('myteleop_key', anonymous=True) #initialize node
    pub = rospy.Publisher('cmd_vel', Twist, queue_size=10) #initialize publisher
    vel = [0,0] #[linear, angular]
    try:
        print(msg)
        i=0
        #while(1)
        key = '7'
        var = 0
        while(1):
            #print('Im inside')
            # key = getKey() #receive input key from user
            """
            if (key ==''):
                key = '7'
            elif (key =='7' and i>100):
                key = 'x'
            #print("I'm inside v2")
            #testing newVelocity function with key inputs
            """
            """
            if (i%3 == 0):
                key = 'a'
            else:
                key = 'w'
            """
            twist = newVelocity(key) #will update velocity within bounds based on user input
            #twist.linear.x = .5*linMax #testing, broadacast 1/2 max speed constantly
            pub.publish(twist) #publish twist to topic cmd_vel
            print(key)
            now = rospy.get_rostime()
            print(now)

            if (key =='7' and var == 0):
                start = rospy.get_rostime()
                var =1
            elif(key=='7' and var!=0 and False):
                pass
                #kevary='8'
                #var = 0
            else:
                pass
    except:            #i=i+1
        print(exit)
    finally:
        #twist velocities to 0 and publish
        pass




	#publshing twist messages of a que size 10 to cmd_vel
